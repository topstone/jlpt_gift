#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require 'csv'

# 標準入力からTSVデータを読み込み
input_lines = STDIN.read.split("\n").reject(&:empty?)

# データ構造を初期化
data_rows = []
header_indices = {}

# 1行目は必ず見出し行
header_fields = input_lines.first.split("\t")

# 各フィールドのインデックスを記録
header_fields.each_with_index do |field, index|
  if field == "語"
    header_indices[:reading] = index
  elsif field.include?("級")
    header_indices[:level] = index
  elsif field.include?("原")
    header_indices[:original] = index
  end
end

# データ行を処理（見出し行をスキップ）
input_lines[1..-1].each do |line|
  fields = line.split("\t")
  
  reading = header_indices[:reading] ? fields[header_indices[:reading]] : ""
  level = header_indices[:level] ? fields[header_indices[:level]] : ""
  original = header_indices[:original] ? fields[header_indices[:original]] : ""
  
  # 原語フィールドの末尾が「（する）」の場合削除
  original = original.gsub(/（する） *$/, "") if original
  readings = readings.gsub(/（する） *$/, "") if readings
  
  # 読みと原語の分割処理（「//」「・」「、」）
  readings = [reading]
  if reading.include?("//")
    readings = reading.split("//")
  elsif reading.include?("・")
    readings = reading.split("・")
  elsif reading.include?("、")
    readings = reading.split("、")
  end
  
  originals = [original]
  if original.include?("//")
    originals = original.split("//")
  elsif original.include?("・")
    originals = original.split("・")
  elsif original.include?("、")
    originals = original.split("、")
  end
  
  # 各組み合わせをデータ行に追加
  readings.each do |r|
    originals.each do |o|
      # 原語が英字のみの場合は採用しない
      if o.match?(/^[a-zA-Z]+$/)
        data_rows << {
          reading: r.strip,
          level: level,
          original: ""
        }
      else
        data_rows << {
          reading: r.strip,
          level: level,
          original: o.strip
        }
      end
    end
  end
end

# 読みでグループ化
reading_groups = data_rows.group_by { |row| row[:reading] }

# 結果を格納する配列
output_rows = []

reading_groups.each do |reading, rows|
  if rows.length >= 2
    # 同じ読みが2行以上の場合：「原語」「級」を1行出力
    rows.each do |row|
      output_rows << [row[:original], row[:level]]
    end
  else
    # 同じ読みが1行の場合：「原語」「級」と「読み」「級」を2行出力
    row = rows.first
    output_rows << [row[:original], row[:level]]
    output_rows << [row[:reading], row[:level]]
  end
end

# CSVファイルに出力
CSV.open("./jlpt_word_list.csv", "w") do |csv|
  output_rows.each do |row|
    csv << row
  end
end

# 標準出力にも同じ内容を出力
output_rows.each do |row|
  puts row.join(",")
end
